import spock.lang.Specification

/**
 * Created by ketaki.sharma on 08/02/2018.
 */
class WorldTest extends Specification {

    def "pattern_for_phase"() {

        given:
        def world = new World()
        def inputGrid = "000000000000000," +
                "000010000010000," +
                "000011000110000," +
                "010011000110010," +
                "011100101001110," +
                "000000101000000," +
                "011100101001110," +
                "010011000110010," +
                "000011000110000," +
                "000010000010000," +
                "000000000000000"


        def expectedGrid = [
                [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0] ,
                [0,0,0,0,1,0,0,0,0,0,1,0,0,0,0],
                [0,0,0,0,1,1,0,0,0,1,1,0,0,0,0],
                [0,1,0,0,1,1,0,0,0,1,1,0,0,1,0] ,
                [0,1,1,1,0,0,1,0,1,0,0,1,1,1,0] ,
                [0,0,0,0,0,0,1,0,1,0,0,0,0,0,0] ,
                [0,1,1,1,0,0,1,0,1,0,0,1,1,1,0] ,
                [0,1,0,0,1,1,0,0,0,1,1,0,0,1,0] ,
                [0,0,0,0,1,1,0,0,0,1,1,0,0,0,0] ,
                [0,0,0,0,1,0,0,0,0,0,1,0,0,0,0] ,
                [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
        ]


        when:
        def result = world.createCurrentGrid(inputGrid)

        then:
        result ==expectedGrid

    }


    def "phase 2"(){
        given:
        def world = new World()

        def expected_pattern_for_phase_2 =[
                [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0] ,
                [0,0,0,0,1,1,0,0,0,1,1,0,0,0,0] ,
                [0,0,0,1,0,0,0,0,0,0,0,1,0,0,0] ,
                [0,1,0,0,0,0,1,0,1,0,0,0,0,1,0] ,
                [0,1,1,1,1,0,1,0,1,0,1,1,1,1,0] ,
                [0,0,0,0,0,1,1,0,1,1,0,0,0,0,0] ,
                [0,1,1,1,1,0,1,0,1,0,1,1,1,1,0] ,
                [0,1,0,0,0,0,1,0,1,0,0,0,0,1,0] ,
                [0,0,0,1,0,0,0,0,0,0,0,1,0,0,0] ,
                [0,0,0,0,1,1,0,0,0,1,1,0,0,0,0] ,
                [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]  ]

        def input_grid  = [
                [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0] ,
                [0,0,0,0,1,0,0,0,0,0,1,0,0,0,0],
                [0,0,0,0,1,1,0,0,0,1,1,0,0,0,0],
                [0,1,0,0,1,1,0,0,0,1,1,0,0,1,0] ,
                [0,1,1,1,0,0,1,0,1,0,0,1,1,1,0] ,
                [0,0,0,0,0,0,1,0,1,0,0,0,0,0,0] ,
                [0,1,1,1,0,0,1,0,1,0,0,1,1,1,0] ,
                [0,1,0,0,1,1,0,0,0,1,1,0,0,1,0] ,
                [0,0,0,0,1,1,0,0,0,1,1,0,0,0,0] ,
                [0,0,0,0,1,0,0,0,0,0,1,0,0,0,0] ,
                [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
        ]

        when:


        def result = world.chaneGridState(input_grid)

        then:
        result == expected_pattern_for_phase_2

    }
}